#!/usr/bin/env python3
"""
PDF Vorschau und Bearbeitungsmodul f√ºr SolarDING
Erm√∂glicht Vorschau, Bearbeitung und individuelle Seitenreihenfolge
"""

import streamlit as st
import io
import base64
from typing import Dict, List, Any, Optional, Tuple
from datetime import datetime

def show_pdf_preview_interface(
    project_data: Dict[str, Any],
    analysis_results: Optional[Dict[str, Any]],
    company_info: Dict[str, Any],
    company_logo_base64: Optional[str],
    texts: Dict[str, str],
    generate_pdf_func: callable
) -> Optional[bytes]:
    """
    Zeigt die PDF-Vorschau-Benutzeroberfl√§che mit Bearbeitungsoptionen.
    
    Args:
        project_data: Projektdaten
        analysis_results: Analyseergebnisse  
        company_info: Firmendaten
        company_logo_base64: Firmenlogo
        texts: √úbersetzungen
        generate_pdf_func: PDF-Generierungsfunktion
    
    Returns:
        PDF-Bytes oder None
    """
    
    st.subheader("üîç PDF-Vorschau & Bearbeitung")
    st.markdown("---")
    
    # PDF-DESIGN OPTIONEN
    with st.expander("üé® PDF-Design anpassen", expanded=True):
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**Layout-Optionen:**")
            include_custom_footer = st.checkbox("üìÑ Custom Footer mit Datum/Seite", value=True, help="| Angebot TT.MMM.JJJJ | Seite xx von xxx |")
            include_header_logo = st.checkbox("üè¢ Firmenlogo rechts oben", value=True, help="Logo auf jeder Seite rechts oben")
            include_company_logo = st.checkbox("üñºÔ∏è Firmenlogo auf Deckblatt", value=True)
            include_product_images = st.checkbox("üì∏ Produktbilder einbinden", value=True)
            
        with col2:
            st.markdown("**Inhalts-Optionen:**")
            include_optional_details = st.checkbox("‚ÑπÔ∏è Detaillierte Komponenteninfos", value=True)
            include_visualizations = st.checkbox("üìä Diagramme & Grafiken", value=True)
            include_all_documents = st.checkbox("üìã Alle Anh√§nge einbinden", value=False)
    
    # SEITENAUSWAHL UND REIHENFOLGE (Das wird BOMBE!)
    st.markdown("### üî• SEITENREIHENFOLGE ANPASSEN (BOMBE!)")
    
    # Verf√ºgbare Sektionen
    available_sections = {
        "ProjectOverview": {"title": "üè† Projekt√ºbersicht & Eckdaten", "description": "Grunddaten der geplanten Anlage"},
        "TechnicalComponents": {"title": "üîß Systemkomponenten", "description": "Module, Wechselrichter, Speicher"},
        "CostDetails": {"title": "üí∞ Kostenaufstellung", "description": "Detaillierte Preis√ºbersicht"},
        "Economics": {"title": "üìà Wirtschaftlichkeit", "description": "Amortisation und Rendite"},
        "SimulationDetails": {"title": "üßÆ Simulationsergebnisse", "description": "Ertragsprognose und Verbrauch"},
        "CO2Savings": {"title": "üå± CO‚ÇÇ-Einsparung", "description": "Umweltbeitrag Ihrer Anlage"},
        "Visualizations": {"title": "üìä Grafische Auswertung", "description": "Charts und Diagramme"},
        "FutureAspects": {"title": "üöó Zukunftsaspekte", "description": "E-Mobilit√§t & W√§rmepumpe"},
        
        # NEUE SEKTIONEN
        "CompanyProfile": {"title": "üè¢ Unternehmensprofil", "description": "√úber uns und Kontakt"},
        "Certifications": {"title": "üèÜ Zertifizierungen", "description": "Qualit√§tsstandards & Auszeichnungen"},
        "References": {"title": "‚≠ê Kundenstimmen", "description": "Referenzen & Bewertungen"},
        "Installation": {"title": "üî® Installation", "description": "Ablauf der Montagearbeiten"},
        "Maintenance": {"title": "üõ†Ô∏è Wartung & Service", "description": "Langzeitbetreuung"},
        "Financing": {"title": "üè¶ Finanzierung", "description": "KfW, Bank, Leasing-Optionen"},
        "Insurance": {"title": "üõ°Ô∏è Versicherungsschutz", "description": "Absicherung Ihrer Investition"},
        "Warranty": {"title": "‚úÖ Garantie", "description": "Herstellergarantien & Gew√§hrleistung"}
    }
    
    # Session State f√ºr Seitenreihenfolge initialisieren
    if 'pdf_page_order' not in st.session_state:
        st.session_state.pdf_page_order = [
            "ProjectOverview", "TechnicalComponents", "CostDetails", "Economics"
        ]
    
    if 'available_sections_pool' not in st.session_state:
        st.session_state.available_sections_pool = [
            key for key in available_sections.keys() 
            if key not in st.session_state.pdf_page_order
        ]
    
    # Drag & Drop √§hnliche Benutzeroberfl√§che
    col_selected, col_available = st.columns([1, 1])
    
    with col_selected:
        st.markdown("**üìã Ausgew√§hlte Seiten (in Reihenfolge):**")
        
        # Aktuelle Seitenreihenfolge anzeigen und bearbeiten
        for i, section_key in enumerate(st.session_state.pdf_page_order):
            section_info = available_sections.get(section_key, {"title": section_key, "description": ""})
            
            col_info, col_up, col_down, col_remove = st.columns([3, 0.5, 0.5, 0.5])
            
            with col_info:
                st.write(f"**{i+1}.** {section_info['title']}")
                st.caption(section_info['description'])
            
            with col_up:
                if st.button("‚¨ÜÔ∏è", key=f"up_{section_key}_{i}", help="Nach oben"):
                    if i > 0:
                        st.session_state.pdf_page_order[i], st.session_state.pdf_page_order[i-1] = \
                        st.session_state.pdf_page_order[i-1], st.session_state.pdf_page_order[i]
                        st.rerun()
            
            with col_down:
                if st.button("‚¨áÔ∏è", key=f"down_{section_key}_{i}", help="Nach unten"):
                    if i < len(st.session_state.pdf_page_order) - 1:
                        st.session_state.pdf_page_order[i], st.session_state.pdf_page_order[i+1] = \
                        st.session_state.pdf_page_order[i+1], st.session_state.pdf_page_order[i]
                        st.rerun()
            
            with col_remove:
                if st.button("‚ùå", key=f"remove_{section_key}_{i}", help="Entfernen"):
                    st.session_state.pdf_page_order.remove(section_key)
                    st.session_state.available_sections_pool.append(section_key)
                    st.rerun()
            
            st.markdown("---")
    
    with col_available:
        st.markdown("**üìö Verf√ºgbare Seiten:**")
        
        for section_key in st.session_state.available_sections_pool:
            section_info = available_sections.get(section_key, {"title": section_key, "description": ""})
            
            col_info, col_add = st.columns([3, 0.5])
            
            with col_info:
                st.write(section_info['title'])
                st.caption(section_info['description'])
            
            with col_add:
                if st.button("‚ûï", key=f"add_{section_key}", help="Hinzuf√ºgen"):
                    st.session_state.pdf_page_order.append(section_key)
                    st.session_state.available_sections_pool.remove(section_key)
                    st.rerun()
            
            st.markdown("---")
    
    # QUICK ACTIONS
    st.markdown("### ‚ö° Quick Actions")
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        if st.button("üîÑ Standard-Reihenfolge"):
            st.session_state.pdf_page_order = ["ProjectOverview", "TechnicalComponents", "CostDetails", "Economics"]
            st.session_state.available_sections_pool = [
                key for key in available_sections.keys() 
                if key not in st.session_state.pdf_page_order
            ]
            st.rerun()
    
    with col2:
        if st.button("üìã Alle Seiten hinzuf√ºgen"):
            st.session_state.pdf_page_order = list(available_sections.keys())
            st.session_state.available_sections_pool = []
            st.rerun()
    
    with col3:
        if st.button("üóëÔ∏è Alle entfernen au√üer Basis"):
            st.session_state.pdf_page_order = ["ProjectOverview"]
            st.session_state.available_sections_pool = [
                key for key in available_sections.keys() 
                if key != "ProjectOverview"
            ]
            st.rerun()
    
    with col4:
        if st.button("üéØ Marketing-Fokus"):
            st.session_state.pdf_page_order = [
                "ProjectOverview", "CompanyProfile", "References", 
                "TechnicalComponents", "CostDetails", "Financing", "Warranty"
            ]
            st.session_state.available_sections_pool = [
                key for key in available_sections.keys() 
                if key not in st.session_state.pdf_page_order
            ]
            st.rerun()
    
    # PDF GENERIEREN UND VORSCHAU
    st.markdown("---")
    st.markdown("### üöÄ PDF erstellen")
    
    col_generate, col_info = st.columns([1, 2])
    
    with col_generate:
        if st.button("üî• PDF GENERIEREN & VORSCHAU", type="primary", use_container_width=True):
            # Inclusion Options zusammenstellen
            inclusion_options = {
                "include_company_logo": include_company_logo,
                "include_product_images": include_product_images,
                "include_all_documents": include_all_documents,
                "include_optional_component_details": include_optional_details,
                "selected_charts_for_pdf": [] if not include_visualizations else ["deckungsgrad_chart", "monthly_generation_chart"],
                "include_custom_footer": include_custom_footer,
                "include_header_logo": include_header_logo
            }
            
            # PDF generieren mit angepasster Seitenreihenfolge
            try:
                with st.spinner("üîÑ PDF wird erstellt..."):
                    pdf_bytes = generate_pdf_func(
                        project_data=project_data,
                        analysis_results=analysis_results,
                        company_info=company_info,
                        company_logo_base64=company_logo_base64,
                        selected_title_image_b64=None,
                        selected_offer_title_text="Ihr individuelles Photovoltaik-Angebot",
                        selected_cover_letter_text="Sehr geehrter Kunde,\n\nwir freuen uns, Ihnen unser ma√ügeschneidertes Angebot f√ºr eine Photovoltaikanlage unterbreiten zu k√∂nnen.",
                        sections_to_include=st.session_state.pdf_page_order,  # CUSTOM REIHENFOLGE!
                        inclusion_options=inclusion_options,
                        load_admin_setting_func=lambda x, default=None: default,
                        save_admin_setting_func=lambda x, y: None,
                        list_products_func=lambda: [],
                        get_product_by_id_func=lambda x: {
                            "brand": "Test-Marke",
                            "model_name": "Test-Modell", 
                            "category": "modul",
                            "capacity_w": 425,
                            "efficiency_percent": 20.5
                        },
                        db_list_company_documents_func=lambda x, y: [],
                        active_company_id=1,
                        texts=texts,
                        use_modern_design=True
                    )
                
                if pdf_bytes:
                    st.success("‚úÖ PDF erfolgreich erstellt!")
                    
                    # PDF Vorschau einbetten
                    b64_pdf = base64.b64encode(pdf_bytes).decode('utf-8')
                    pdf_display = f'<iframe src="data:application/pdf;base64,{b64_pdf}" width="100%" height="800px" type="application/pdf"></iframe>'
                    
                    st.markdown("### üëÄ PDF-VORSCHAU:")
                    st.markdown(pdf_display, unsafe_allow_html=True)
                    
                    # Download-Button
                    st.download_button(
                        label="üíæ PDF HERUNTERLADEN",
                        data=pdf_bytes,
                        file_name=f"Solar_Angebot_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf",
                        mime="application/pdf",
                        type="primary",
                        use_container_width=True
                    )
                    
                    return pdf_bytes
                    
                else:
                    st.error("‚ùå Fehler bei der PDF-Erstellung!")
                    
            except Exception as e:
                st.error(f"‚ùå Fehler: {str(e)}")
    
    with col_info:
        st.info(f"""
        üìä **Aktuelle Konfiguration:**
        - **Seiten:** {len(st.session_state.pdf_page_order)}
        - **Reihenfolge:** {' ‚Üí '.join([available_sections.get(s, {}).get('title', s).split(' ')[1] if ' ' in available_sections.get(s, {}).get('title', s) else s for s in st.session_state.pdf_page_order[:3]])}{'...' if len(st.session_state.pdf_page_order) > 3 else ''}
        - **Layout:** {'‚úÖ' if include_custom_footer else '‚ùå'} Footer, {'‚úÖ' if include_header_logo else '‚ùå'} Header-Logo
        - **Inhalte:** {'‚úÖ' if include_optional_details else '‚ùå'} Details, {'‚úÖ' if include_visualizations else '‚ùå'} Grafiken
        """)
    
    return None


def create_pdf_template_presets() -> Dict[str, List[str]]:
    """
    Erstellt vordefinierte Template-Presets f√ºr verschiedene Anwendungsf√§lle.
    
    Returns:
        Dictionary mit Template-Namen und Sektionslisten
    """
    
    return {
        "Standard": [
            "ProjectOverview", "TechnicalComponents", "CostDetails", "Economics"
        ],
        "Ausf√ºhrlich": [
            "ProjectOverview", "TechnicalComponents", "CostDetails", 
            "Economics", "SimulationDetails", "CO2Savings", "Visualizations"
        ],
        "Marketing-Fokus": [
            "CompanyProfile", "References", "ProjectOverview", 
            "TechnicalComponents", "CostDetails", "Financing", "Warranty"
        ],
        "Technisch-detailliert": [
            "ProjectOverview", "TechnicalComponents", "SimulationDetails",
            "Visualizations", "CostDetails", "Installation", "Maintenance"
        ],
        "Verkaufs-optimiert": [
            "ProjectOverview", "Economics", "CO2Savings", "References",
            "TechnicalComponents", "Financing", "Insurance", "Warranty"
        ],
        "Kompakt": [
            "ProjectOverview", "TechnicalComponents", "CostDetails"
        ],
        "Vollst√§ndig": [
            "ProjectOverview", "TechnicalComponents", "CostDetails", "Economics",
            "SimulationDetails", "CO2Savings", "Visualizations", "FutureAspects",
            "CompanyProfile", "Certifications", "References", "Installation",
            "Maintenance", "Financing", "Insurance", "Warranty"
        ]
    }
